{"version":3,"sources":["util/Firebase.js","Components/form/textInput.js","Components/form/selectBox.js","Components/form/radiobutton.js","Components/form/timePickers.js","Components/form/radioHorizontal.js","Components/Template.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","root","width","BasicTextFields","props","classes","React","useState","value","setValue","index","response","useEffect","noValidate","autoComplete","title","TextField","className","id","label","onChange","event","target","returnAnswer","disabled","locked","formControl","minWidth","SelectBox","open","setOpen","FormControl","InputLabel","Select","labelId","onClose","onOpen","answers","indexOf","MenuItem","map","el","i","key","RadioButton","const","RadioGroup","aria-label","name","FormControlLabel","control","Radio","container","display","flexWrap","textField","marginLeft","spacing","marginRight","TimePickers","type","InputLabelProps","shrink","InputProps","disableUnderline","RadioHorizontal","idx","setIdx","tmp","idTmp","handleChange","onClick","subquestion","question","component","color","labelPlacement","queryString","require","Template","state","questions","main_title","gateway","shortAnswers","showAnswers","period","rootRef","database","ref","child","textRef","downloadData","urlString","parse","window","location","search","decode","url","fetch","then","console","log","json","data","setState","initResponse","timeManager","uploadData","method","mode","body","JSON","stringify","headers","success","catch","error","now","Date","start","finish","before","nofill","in","after","decodedResponse","decodeURI","Object","entries","keys","nestedKey","nestedValue","answer","idArr","this","push","questionList","r","style","paddingTop","paddingBottom","textAlign","Component","App","forms","mainUrl","Home","FormA","FormB","FormC","to","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.696b67db.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDRhaklmVogc4wWVlf6MWMUS0gpMccfn0I\",\r\n    authDomain: \"atna-lab.firebaseapp.com\",\r\n    databaseURL: \"https://atna-lab.firebaseio.com\",\r\n    projectId: \"atna-lab\",\r\n    storageBucket: \"atna-lab.appspot.com\",\r\n    messagingSenderId: \"436661740234\",\r\n    appId: \"1:436661740234:web:8baf6f9f6c2c845d828a33\",\r\n    measurementId: \"G-LF9JG7V3D4\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& > *': {\r\n\t\t\twidth: '40ch',\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form noValidate autoComplete=\"off\">\r\n\t\t\t\t<h4>{props.title}</h4>\r\n\t\t\t\t<TextField \r\n\t\t\t\t\tclassName={classes.root}\r\n\t\t\t\t\tid={\"inputBox\" + index}\r\n\t\t\t\t\tlabel=\"Мой ответ\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 120,\r\n\t},\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl className={classes.formControl} disabled={props.locked ? true : false}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t<MenuItem value={\"\"}><em>None</em></MenuItem>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem key={i} value={el}>{el}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio/>} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false} />)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function TimePickers(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [index, response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<form className={classes.container} noValidate>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid={\"time\" + index}\r\n\t\t\t\t\tlabel=\"Время\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tInputProps={{disableUnderline: true}}\r\n\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport '../../App.css'\r\n\r\nexport default function RadioHorizontal(props) {\r\n\tconst [value, setValue] = useState({});\r\n\tconst [idx, setIdx] = useState({});\r\n\tlet tmp = {}\r\n\tlet idTmp = {}\r\n\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = id => event => {\r\n\t\ttmp = {...value}\r\n\t\ttmp[id] = event.target.value\r\n\t\tsetValue(tmp)\r\n\r\n\t\tidTmp ={...idx}\r\n\t\tlet i = props.answers.indexOf(event.target.value)\r\n\t\tidTmp[id] = i\r\n\t\tsetIdx(idTmp)\r\n\r\n\t\tprops.returnAnswer(tmp, index, idTmp)\r\n\t};\r\n\r\n\tconst handleClear = () => {\r\n\t\tsetValue({})\r\n\t\tprops.returnAnswer({}, index)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"radioHorizontal\">\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<button onClick={handleClear}>clear</button>\r\n\t\t\t<div className=\"question_item\">\r\n\t\t\t\t{props.subquestion.map((question, id) =>\r\n\t\t\t\t\t<div className=\"question_item_\" key={id}>\r\n\t\t\t\t\t\t<p>{question}</p>\r\n\t\t\t\t\t\t<FormControl component=\"fieldset\" className=\"question_item__answer\">\r\n\t\t\t\t\t\t\t<RadioGroup aria-label=\"position\" name=\"position\" className=\"question_item__answer_\" value={value[id] ? value[id] : \"\"}\r\n\t\t\t\t\t\t\t            onClick={handleChange(id)}>\r\n\t\t\t\t\t\t\t\t{props.answers.map((el, i) =>\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={el}\r\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\"/>}\r\n\t\t\t\t\t\t\t\t\t\tlabel={id > 0 ? \"\" : el}\r\n\t\t\t\t\t\t\t\t\t\tlabelPlacement=\"top\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n","import React, {Component} from 'react';\r\nimport firebase from '../util/Firebase';\r\nimport \"../App.css\"\r\n\r\nimport TextInput from \"./form/textInput\";\r\nimport SelectBox from \"./form/selectBox\";\r\nimport RadioButton from \"./form/radiobutton\";\r\nimport TimePickers from \"./form/timePickers\";\r\nimport RadioHorizontal from \"./form/radioHorizontal\";\r\n\r\nconst queryString = require('query-string');\r\n\r\n\r\nclass Template extends Component {\r\n    state = {\r\n      questions: [],\r\n      main_title: '',\r\n      gateway: '',\r\n      answers: {},\r\n      shortAnswers: {},\r\n      showAnswers: false,\r\n      response: {},\r\n      period: null,\r\n      locked: false\r\n    }\r\n\r\n    rootRef = firebase.database().ref().child('RE:Message');\r\n    textRef = this.rootRef.child(\"d1\")\r\n  \r\n    componentDidMount() {\r\n        this.downloadData()\r\n        this.textRef.push(\"nice to meet you\")\r\n    }\r\n\r\n    downloadData = () => {\r\n        let urlString = queryString.parse(window.location.search, {decode: false})\r\n        if (this.props.url) {\r\n            fetch(this.props.url)\r\n                .then((response) => {\r\n                    console.log(\"RESPONSE\", response)\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    console.log(\"DATA\", data);\r\n                    this.setState({\r\n                        questions: data.questions,\r\n                        main_title: data.main_title,\r\n                        gateway: data.gateway,\r\n                        period: data.period\r\n                    })\r\n                    if (urlString.response) {\r\n                      this.initResponse(data, urlString)\r\n                    }\r\n                    if (data.period) {\r\n                      this.timeManager(data)\r\n                    }\r\n                });\r\n        } else {\r\n            console.log(\"ERROR: no url detected\")\r\n        }\r\n    }\r\n  \r\n    uploadData = (data) => {\r\n      fetch(this.state.gateway, { \r\n      method: 'POST',\r\n      mode: 'no-cors',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(\r\n      response => response.json()\r\n    ).then(\r\n      success => console.log(success)\r\n    ).catch(\r\n      error => {\r\n        console.log(\"Error\", error)\r\n        this.setState({showAnswers: true})\r\n      }\r\n    );\r\n    }\r\n\r\n    timeManager = (data) => {\r\n      let now = new Date();\r\n      let start = new Date(data.period.start);\r\n      let finish = new Date(data.period.finish)\r\n      console.log(now, start, finish)\r\n      if (start > now && data.period.before.nofill) {\r\n        this.setState({locked: true})\r\n      }\r\n      else if (start < now && now < finish && data.period.in.nofill) {\r\n        this.setState({locked: true})\r\n      }\r\n      else if (now > finish && data.period.after.nofill) {\r\n        this.setState({locked: true})\r\n      }\r\n      else {\r\n        this.setState({locked: false})\r\n      }\r\n      console.log(\"LOCKED \", this.state.locked)\r\n    }\r\n\r\n    initResponse = (data, urlString) => {\r\n      let decodedResponse = decodeURI(urlString.response)\r\n      let response = JSON.parse(decodedResponse)\r\n      console.log(response)\r\n      this.setState({response: response})\r\n      for (const [key, value] of Object.entries(response)) {\r\n        let id = null\r\n        if (key === Object.keys(response)[0]) {\r\n          this.returnAnswer(value, key)\r\n        }\r\n        if (data.questions[key].type === 'input') {\r\n          this.returnAnswer(value, key)\r\n        }\r\n        else if (data.questions[key].type === 'time') {\r\n          this.returnAnswer(value, key, value)\r\n        }\r\n        else if (data.questions[key].type === 'multiradio') {\r\n          for (const [nestedKey, nestedValue] of Object.entries(value)) {\r\n            let id = data.questions[key].answer.indexOf(nestedValue)\r\n            let idArr = {...this.state.shortAnswers[key]}\r\n            idArr[nestedKey] = id\r\n            this.returnAnswer(value, key, idArr)\r\n          }\r\n        }\r\n        else {\r\n          id = data.questions[key].answer.indexOf(value)\r\n          this.returnAnswer(value, key, id)\r\n        }\r\n      }\r\n    }\r\n  \r\n    returnAnswer = (answer, index, id = null) => {\r\n      let answers = {...this.state.answers}\r\n      answers[index] = answer\r\n      this.setState({answers: answers})\r\n\r\n      let shortAnswers = {...this.state.shortAnswers}\r\n      shortAnswers[index] = id\r\n      this.setState({shortAnswers: shortAnswers})\r\n    }\r\n    \r\n  \r\n    render () {\r\n      let questionList = this.state.questions.map((el, i) => {\r\n        const r = this.state.response\r\n        if (el.type === 'input') {\r\n          return <TextInput key={i} index={i} title={el.title} response={r[i]} returnAnswer={this.returnAnswer} locked={this.state.locked} />\r\n        }\r\n        else if (el.type === 'select') {\r\n          return <SelectBox key={i} index={i} title={el.title} response={r[i]} answers={el.answer} returnAnswer={this.returnAnswer} locked={this.state.locked} />\r\n        }\r\n        else if (el.type === 'radio') {\r\n          return <RadioButton key={i} index={i} title={el.title} response={r[i]} answers={el.answer} returnAnswer={this.returnAnswer} locked={this.state.locked} />\r\n        }\r\n        else if (el.type === 'time') {\r\n          return <TimePickers key={i} index={i} title={el.title} response={r[i]} returnAnswer={this.returnAnswer} locked={this.state.locked} />\r\n        }\r\n        else if (el.type === 'multiradio') {\r\n          return <RadioHorizontal key={i} index={i} title={el.title} response={r[i]} subquestion={el.subquestion} answers={el.answer} returnAnswer={this.returnAnswer} locked={this.state.locked} />\r\n        }\r\n        else {\r\n          return null\r\n        }\r\n      })\r\n  \r\n      return (\r\n        <div>\r\n          <h1 className=\"text-align-center\">{this.state.main_title}</h1>\r\n          {questionList}\r\n          <div style={{paddingTop: 20, paddingBottom: 20, textAlign: \"center\"}}>\r\n            <button disabled={this.state.locked ? true : false} onClick={() => this.uploadData({\"a\":\"HELLo\"})}>Send data</button>\r\n            {this.state.showAnswers ? <p style={{textAlign: \"left\"}}>Full answers: {JSON.stringify(this.state.answers)}</p> : null}\r\n            {this.state.showAnswers ? <p style={{textAlign: \"left\"}}>Short answers: {JSON.stringify(this.state.shortAnswers)}</p> : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Template","import React, {Component} from 'react';\r\nimport \"./App.css\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport Template from './Components/Template'\r\n\r\nconst queryString = require('query-string');\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    forms: [],\r\n    mainUrl: ''\r\n  }\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.downloadData()\r\n\t}\r\n\r\n\tdownloadData = () => {\r\n\t\tlet urlString = queryString.parse(window.location.search)\r\n\t\tconsole.log(urlString)\r\n\t\tif (urlString.url) {\r\n\t\t\tfetch(urlString.url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tthis.setState({\r\n            forms: data,\r\n            mainUrl: urlString.url\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}\r\n\r\n  Home = () => {\r\n    return <h2>Home</h2>;\r\n  }\r\n  \r\n  FormA = () => {\r\n    return <Template url={'https://raw.githubusercontent.com/aTNa-Lab/kloop-forms-config/master/form_A.json'} />\r\n  }\r\n  \r\n  FormB = () => {\r\n    return <Template url={'https://raw.githubusercontent.com/aTNa-Lab/kloop-forms-config/master/form_B.json'} />\r\n  }\r\n  \r\n  FormC = () => {\r\n    return <Template url={'https://raw.githubusercontent.com/aTNa-Lab/kloop-forms-config/master/form_C.json'} />\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n         <Router>\r\n          <div>\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  <Link to={\"/\" + window.location.search}>Home</Link>\r\n                </li>\r\n                {this.state.forms.map((el, i) => (\r\n                  <li key={i}>\r\n                    <Link to={el.path + window.location.search}>{el.label}</Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </nav>\r\n\r\n            <Switch>\r\n              {this.state.forms.map((el, i) => (\r\n                <Route key={i} path={el.path}>\r\n                  {() => <Template url={el.url + window.location.search} />}\r\n                </Route>\r\n                ))}\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}