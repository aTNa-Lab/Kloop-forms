{"version":3,"sources":["Components/form/textInput.js","Components/form/selectBox.js","Components/form/radiobutton.js","Components/form/timePickers.js","Components/form/radioHorizontal.js","Components/Template.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","BasicTextFields","props","classes","React","useState","value","setValue","index","noValidate","autoComplete","title","TextField","className","id","label","onChange","event","target","returnAnswer","formControl","minWidth","SelectBox","open","setOpen","FormControl","InputLabel","Select","labelId","onClose","onOpen","answers","indexOf","MenuItem","map","el","i","key","RadioButton","const","RadioGroup","aria-label","name","FormControlLabel","control","Radio","container","display","flexWrap","textField","marginLeft","spacing","marginRight","TimePickers","type","InputLabelProps","shrink","InputProps","disableUnderline","RadioHorizontal","idx","setIdx","tmp","idTmp","handleChange","onClick","subquestion","question","component","color","labelPlacement","queryString","require","Template","state","questions","main_title","gateway","shortAnswers","showAnswers","downloadData","urlString","parse","window","location","search","decode","console","log","url","fetch","then","response","json","data","setState","uploadData","method","mode","body","JSON","stringify","headers","success","catch","error","answer","this","questionList","style","paddingTop","paddingBottom","textAlign","Component","App","forms","mainUrl","Home","FormA","FormB","FormC","to","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.33cfaa40.chunk.js","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& > *': {\r\n\t\t\twidth: '40ch',\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst index = props.index\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form noValidate autoComplete=\"off\">\r\n\t\t\t\t<h4>{props.title}</h4>\r\n\t\t\t\t<TextField \r\n\t\t\t\t\tclassName={classes.root}\r\n\t\t\t\t\tid={\"inputBox\" + index}\r\n\t\t\t\t\tlabel=\"Мой ответ\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 120,\r\n\t},\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst index = props.index\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t<MenuItem value={\"\"}><em>None</em></MenuItem>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem key={i} value={el}>{el}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst index = props.index\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel key={i} value={el} control={<Radio/>} label={el}/>)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function TimePickers(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst index = props.index\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<form className={classes.container} noValidate>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid={\"time\" + index}\r\n\t\t\t\t\tlabel=\"Время\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tInputProps={{disableUnderline: true}}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}","import React, {useState} from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport '../../App.css'\r\n\r\nexport default function RadioHorizontal(props) {\r\n\tconst [value, setValue] = useState({});\r\n\tconst [idx, setIdx] = useState({});\r\n\tconst index = props.index\r\n\tlet tmp = {}\r\n\tlet idTmp = {}\r\n\r\n\tconst handleChange = id => event => {\r\n\t\ttmp = {...value}\r\n\t\ttmp[id] = event.target.value\r\n\t\tsetValue(tmp)\r\n\r\n\t\tidTmp ={...idx}\r\n\t\tlet i = props.answers.indexOf(event.target.value)\r\n\t\tidTmp[id] = i\r\n\t\tsetIdx(idTmp)\r\n\r\n\t\tprops.returnAnswer(tmp, index, idTmp)\r\n\t};\r\n\r\n\tconst handleClear = () => {\r\n\t\tsetValue({})\r\n\t\tprops.returnAnswer({}, index)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"radioHorizontal\">\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<button onClick={handleClear}>clear</button>\r\n\t\t\t<div className=\"question_item\">\r\n\t\t\t\t{props.subquestion.map((question, id) =>\r\n\t\t\t\t\t<div className=\"question_item_\" key={id}>\r\n\t\t\t\t\t\t<p>{question}</p>\r\n\t\t\t\t\t\t<FormControl component=\"fieldset\" className=\"question_item__answer\">\r\n\t\t\t\t\t\t\t<RadioGroup aria-label=\"position\" name=\"position\" className=\"question_item__answer_\" value={value[id] ? value[id] : \"\"}\r\n\t\t\t\t\t\t\t            onClick={handleChange(id)}>\r\n\t\t\t\t\t\t\t\t{props.answers.map((el, i) =>\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={el}\r\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\"/>}\r\n\t\t\t\t\t\t\t\t\t\tlabel={id > 0 ? \"\" : el}\r\n\t\t\t\t\t\t\t\t\t\tlabelPlacement=\"top\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n","import React, {Component} from 'react';\r\nimport \"../App.css\"\r\n\r\nimport TextInput from \"./form/textInput\";\r\nimport SelectBox from \"./form/selectBox\";\r\nimport RadioButton from \"./form/radiobutton\";\r\nimport TimePickers from \"./form/timePickers\";\r\nimport RadioHorizontal from \"./form/radioHorizontal\";\r\n\r\nconst queryString = require('query-string');\r\n\r\n\r\nclass Template extends Component {\r\n    state = {\r\n      questions: [],\r\n      main_title: '',\r\n      gateway: '',\r\n      answers: {},\r\n      shortAnswers: {},\r\n      showAnswers: false\r\n    }\r\n  \r\n    componentDidMount() {\r\n        this.downloadData()\r\n    }\r\n\r\n    downloadData = () => {\r\n        let urlString = queryString.parse(window.location.search, {decode: false})\r\n        console.log(urlString)\r\n        if (this.props.url) {\r\n            fetch(this.props.url)\r\n                .then((response) => {\r\n                    console.log(\"RESPONSE\", response)\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    console.log(\"DATA\", data);\r\n                    this.setState({\r\n                        questions: data.questions,\r\n                        main_title: data.main_title,\r\n                        gateway: data.gateway\r\n                    })\r\n                });\r\n        } else {\r\n            console.log(\"ERROR: no url detected\")\r\n        }\r\n    }\r\n  \r\n    uploadData = (data) => {\r\n      fetch(this.state.gateway, { \r\n      method: 'POST',\r\n      mode: 'no-cors',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(\r\n      response => response.json()\r\n    ).then(\r\n      success => console.log(success)\r\n    ).catch(\r\n      error => {\r\n        console.log(\"Error\", error)\r\n        this.setState({showAnswers: true})\r\n      }\r\n    );\r\n    }\r\n  \r\n    returnAnswer = (answer, index, id = null) => {\r\n      let answers = {...this.state.answers}\r\n      answers[index] = answer\r\n      this.setState({answers: answers})\r\n\r\n      let shortAnswers = {...this.state.shortAnswers}\r\n      shortAnswers[index] = id\r\n      this.setState({shortAnswers: shortAnswers})\r\n    }\r\n    \r\n  \r\n    render () {\r\n      let questionList = this.state.questions.map((el, i) => {\r\n        if (el.type === 'input') {\r\n          return <TextInput key={i} index={i} title={el.title} returnAnswer={this.returnAnswer} />\r\n        }\r\n        else if (el.type === 'select') {\r\n          return <SelectBox key={i} index={i} title={el.title} answers={el.answer} returnAnswer={this.returnAnswer} />\r\n        }\r\n        else if (el.type === 'radio') {\r\n          return <RadioButton key={i} index={i} title={el.title} answers={el.answer} returnAnswer={this.returnAnswer} />\r\n        }\r\n        else if (el.type === 'time') {\r\n          return <TimePickers key={i} index={i} title={el.title} returnAnswer={this.returnAnswer} />\r\n        }\r\n        else if (el.type === 'multiradio') {\r\n          return <RadioHorizontal key={i} index={i} title={el.title} subquestion={el.subquestion} answers={el.answer} returnAnswer={this.returnAnswer} />\r\n        }\r\n        else {\r\n          return null\r\n        }\r\n      })\r\n  \r\n      return (\r\n        <div>\r\n          <h1 className=\"text-align-center\">{this.state.main_title}</h1>\r\n          {questionList}\r\n          <div style={{paddingTop: 20, paddingBottom: 20, textAlign: \"center\"}}>\r\n            <button onClick={() => this.uploadData({\"a\":\"HELLo\"})}>Send data</button>\r\n            {this.state.showAnswers ? <p style={{textAlign: \"left\"}}>Full answers: {JSON.stringify(this.state.answers)}</p> : null}\r\n            {this.state.showAnswers ? <p style={{textAlign: \"left\"}}>Short answers: {JSON.stringify(this.state.shortAnswers)}</p> : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Template","import React, {Component} from 'react';\r\nimport \"./App.css\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport TextInput from \"./Components/form/textInput\";\r\nimport SelectBox from \"./Components/form/selectBox\";\r\nimport RadioButton from \"./Components/form/radiobutton\";\r\nimport TimePickers from \"./Components/form/timePickers\";\r\nimport RadioHorizontal from \"./Components/form/radioHorizontal\";\r\n\r\nimport Template from './Components/Template'\r\n\r\nconst queryString = require('query-string');\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    forms: [],\r\n    mainUrl: ''\r\n  }\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.downloadData()\r\n\t}\r\n\r\n\tdownloadData = () => {\r\n\t\tlet urlString = queryString.parse(window.location.search, {decode: false})\r\n\t\tconsole.log(urlString)\r\n\t\tif (urlString.url) {\r\n\t\t\tfetch(urlString.url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tthis.setState({\r\n            forms: data,\r\n            mainUrl: urlString.url\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}\r\n\r\n  Home = () => {\r\n    return <h2>Home</h2>;\r\n  }\r\n  \r\n  FormA = () => {\r\n    return <Template url={'https://raw.githubusercontent.com/aTNa-Lab/kloop-forms-config/master/form_A.json'} />\r\n  }\r\n  \r\n  FormB = () => {\r\n    return <Template url={'https://raw.githubusercontent.com/aTNa-Lab/kloop-forms-config/master/form_B.json'} />\r\n  }\r\n  \r\n  FormC = () => {\r\n    return <Template url={'https://raw.githubusercontent.com/aTNa-Lab/kloop-forms-config/master/form_C.json'} />\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n         <Router>\r\n          <div>\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  <Link to={\"/?url=\" + this.state.mainUrl}>Home</Link>\r\n                </li>\r\n                {this.state.forms.map((el, i) => (\r\n                  <li>\r\n                    <Link key={i} to={el.path + '?url=' + this.state.mainUrl}>{el.label}</Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </nav>\r\n\r\n            <Switch>\r\n              {this.state.forms.map((el, i) => (\r\n                <Route key={i} path={el.path}>\r\n                  {() => <Template url={el.url + '?url=' + this.state.mainUrl} />}\r\n                </Route>\r\n                ))}\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}